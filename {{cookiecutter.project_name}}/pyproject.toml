[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
readme = "README.md"
repository = ""
keywords = []
maintainers = []
license = ""
homepage = ""
documentation = ""
# packages = [
#     { include = "{{cookiecutter.package_name}}", from = "src" }
# ]
# include = [
#     { path = "tests", format = "sdist" }
# ]
{% if cookiecutter.command_line_interface|lower == 'y' %}
[tool.poetry.scripts]
{{cookiecutter.package_name}} = "{{cookiecutter.package_name}}.cli.main:app"
{% endif %}
[tool.poetry.dependencies]
python = "^{{cookiecutter.python_version}}"
PyYAML = "*"
pydantic = "^1.9.1"
{%- if cookiecutter.command_line_interface|lower == 'y' %}
typer = {extras = ["all"], version = "^0.5.0"}
{%- endif %}

[tool.poetry.dev-dependencies]
# Formaters
black = "*"
isort = "*"
# Linters
flake8 = "*"
mypy = "*"
wemake-python-styleguide = "*"
# Packages vulnerabilities scan
safety = "*"
# Pre-commit
pre-commit = "*"
# Testing
pytest = "*"
pytest-cov = "*"
pytest-clarity = "*"
pytest-randomly = "*" # random shuffle tests
xdoctest = "*"
# Documentation
mdx_include = "*"
mkdocs = "*"
mkdocs-material = "*"
mkdocstrings = {extras = ["python"], version = "*"}
pygments = "*"
pymdown-extensions = "*"
{% if cookiecutter.notebooks_support == "yes" %}
# Jupyter notebooks
jupyter = "*"
nbautoexport = "*"
nbqa = "*"
jupyter-contrib-nbextensions = "*"
{%- endif %}
# Other tools
pipdeptree = "*"
toml = "*"

[tool.black]
target-version = ["py36", "py37", "py38"]
line-length = 99
ipynb = false

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
combine_as_imports = true
lines_after_imports = 2
line_length = 99

[tool.mypy]
plugins = [
  "pydantic.mypy",
]
cache_dir = ".cache/mypy/"
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
strict_equality = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests", "{{cookiecutter.package_name}}"]
addopts = [
    "--strict",
    "-vv",
    "-r sxX",
    "--cov-report=html",
    "--cov-report=term-missing:skip-covered",
    "--no-cov-on-fail",
    "--xdoc",
]
console_output_style = "count"
cache_dir = ".cache"
markers = ""
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
branch = true
data_file = ".cache/coverage"
omit = [".venv/*", "*/tests/*", "*/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "except DistributionNotFound",
    "TYPE_CHECKING",
]
