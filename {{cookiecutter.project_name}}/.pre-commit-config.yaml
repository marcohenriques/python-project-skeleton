# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
exclude: "CHANGELOG.md"
default_stages: [commit]

ci:
  autofix_commit_msg: "chore(pre-commit.ci): auto fixes"
  autoupdate_commit_msg: "chore(pre-commit.ci): pre-commit autoupdate"

repos:
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v2.35.0
    hooks:
      - id: commitizen
        stages: [commit-msg]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
      - id: requirements-txt-fixer
      - id: trailing-whitespace
        exclude: |
          (?x)^(
            notebooks/
          )
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        exclude: |
          (?x)^(
            notebooks/
          )
      - id: check-yaml
      - id: check-symlinks
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v2.1.0
    hooks:
      - id: add-trailing-comma
  - repo: local
    hooks:
      - id: black
        name: Running black
        stages: [commit]
        language: system
        entry: poetry run black
        types: [python]
        exclude: |
          (?x)^(
            scripts/|
            notebooks/
          )
      - id: check-packages
        name: Running check-packages
        stages: [commit]
        language: system
        entry: make
        pass_filenames: false
        args: [check-packages]
      - id: ruff
        name: Running ruff
        stages: [commit]
        language: system
        entry: poetry run ruff --fix
        types: [python]
        exclude: |
          (?x)^(
            scripts/|
            notebooks/
          )
      - id: mypy
        name: Running mypy
        stages: [commit]
        language: system
        entry: poetry run mypy
        args: [--install-types, --non-interactive]
        types: [python]
        exclude: |
          (?x)^(
            scripts/|
            notebooks/
          )
      - id: shellcheck
        name: Running shellcheck
        stages: [commit]
        entry: poetry run shellcheck
        language: python
        types: [shell]
{% if cookiecutter.include_notebooks == "yes" %}
      - id: nbqa-black
        name: Running black on notebooks
        description: "black formatting for jupyter notebooks"
        language: system
        entry: poetry run nbqa black
        args: [--nbqa-mutate]
        types: [file]
        files: \.(ipynb)$
      - id: nbqa-ruff
        name: Running ruff on notebooks
        description: "ruff checking for jupyter notebooks"
        language: system
        entry: poetry run nbqa ruff --fix
        types: [file]
        files: \.(ipynb)$
      - id: nbqa-mypy
        name: Running mypy on notebooks
        description: "mypy checking for jupyter notebooks"
        language: system
        entry: poetry run nbqa mypy
        types: [file]
        files: \.(ipynb)$
{% endif %}
      # - id: pytest
      #   name: pytest
      #   stages: [commit]
      #   language: system
      #   entry: poetry run pytest
      #   types: [python]

      # - id: pytest-cov
      #   name: pytest
      #   stages: [push]
      #   language: system
      #   entry: poetry run pytest --cov --cov-fail-under=100
      #   types: [python]
      #   pass_filenames: false
