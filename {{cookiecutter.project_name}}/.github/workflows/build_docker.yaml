name: Docker

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
        description: the name of the docker image (with repo, if applied)
      image-tag:
        required: true
        type: string
        description: the docker image tag to use
      push-image:
        required: false
        type: boolean
        default: false
        description: whether to push the image to registry
      push-latest-tag:
        required: false
        type: boolean
        default: false
        description: whether to also push the latest tag (only applied if `push-image`` is 'true')

env:
  IMAGE_NAME: {% raw %}${{ inputs.image-name}}{% endraw %}
  IMAGE_TAG: {% raw %}${{ inputs.image-tag}}{% endraw %}

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Build image
        env:
          DOCKER_IMAGE_NAME: ${IMAGE_NAME}
          DOCKER_IMAGE_TAG: ${IMAGE_TAG}
        run: |
          make build-docker

      # More repo options: https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: inputs.push-image == 'true'
        with:
          registry: ghcr.io
          username: {% raw %}${{ github.actor }}{% endraw %}
          password: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}

      - name: Push image to registry
        if: inputs.push-image == 'true'
        env:
          DOCKER_REGISTRY: ghcr.io/{{ cookiecutter.github_username_or_org_name }}
        run: |
          # Tagging with $IMAGE_NAME:$IMAGE_TAG
          docker tag "${IMAGE_NAME}":"${IMAGE_TAG}" "${DOCKER_REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_TAG}"
          docker push "${DOCKER_REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_TAG}"

          # Tagging with $IMAGE_NAME:latest to be used in airflow
          if [[ {% raw %}${{ inputs.push-latest-tag }}{% endraw %} == 'true' ]]; then
            docker tag "${IMAGE_NAME}":"${IMAGE_TAG}" "${DOCKER_REGISTRY}"/"${IMAGE_NAME}":latest
            docker push "${DOCKER_REGISTRY}"/"${IMAGE_NAME}":latest
          fi
