name: Build and push docker image

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-tag:
        required: true
        type: string
      push-image:
        required: false
        type: string
        default: "false"

env:
  IMAGE_NAME: {% raw %}${{ inputs.image-name}}{% endraw %}
  IMAGE_TAG: {% raw %}${{ inputs.image-tag}}{% endraw %}

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2

      - name: Set up Python {{ cookiecutter.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.0
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Build image
        run: |
          set -eux
          DOCKER_IMAGE_NAME=${IMAGE_NAME} DOCKER_IMAGE_TAG=${IMAGE_TAG} make build-docker

      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: inputs.push-image == 'true'
        with:
          registry: ghcr.io
          username: {% raw %}${{ github.actor }}{% endraw %}
          password: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}

      - name: Push image to Amazon ECR
        if: inputs.push-image == 'true'
        env:
          ECR_REGISTRY: ghcr.io/{{ cookiecutter.github_username_or_org_name }}
        run: |
          # Tagging with $IMAGE_NAME:$IMAGE_TAG
          docker tag "${IMAGE_NAME}":"${IMAGE_TAG}" "${ECR_REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_TAG}"
          docker push "${ECR_REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_TAG}"

          # Tagging with $IMAGE_NAME:latest to be used in airflow
          docker tag "${IMAGE_NAME}":"${IMAGE_TAG}" "${ECR_REGISTRY}"/"${IMAGE_NAME}":latest
          docker push "${ECR_REGISTRY}"/"${IMAGE_NAME}":latest


